/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion.paneles;

import dominio.d_clave;
import dominio.d_movimiento;
import dominio.d_propietario;
import dominio.d_propietario_dgi;
import interfaces.observador_prop;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;
import persistencia.p_propietario_dgi;

/**
 *
 * @author Gonzalo
 */
public class p_fichapropietario extends javax.swing.JDialog implements observador_prop {

    public d_propietario pro = new d_propietario();
    List<d_movimiento> listamovimientos = new ArrayList<d_movimiento>();
    Integer idobtenido = -1;

    /**
     * Creates new form p_fichainquilino
     */
    public p_fichapropietario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        cargarpropietariopredefinido();
        cargarpropietario();
        caract.setText(String.valueOf(cant_caract_observaciones()) + "/255");
    }

    void cargarpropietariopredefinido() {
        p_control con = p_control.getInstancia();

        this.pro = con.prop;
    }

    int cant_caract_observaciones() {
        if (txtobservaciones.getText().equals("")) {
            return 0;
        }
        return txtobservaciones.getText().length();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txtnumcontacto = new javax.swing.JTextField();
        txtcirut = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        lblsaldo = new javax.swing.JLabel();
        lblid = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtobservaciones = new javax.swing.JTextArea();
        caract = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtdepartamento = new javax.swing.JTextField();
        txtciudad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtpais = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FICHA DE PROPIETARIO");
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("ID PROP");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 20, 120, 17);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("CIUDAD");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 120, 120, 17);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("DEPARTAMENTO");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(280, 120, 200, 17);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("NUMERO");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 220, 130, 17);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("PAIS");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 170, 100, 17);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(java.awt.Color.red);
        jLabel7.setText("* SE RECOMIENDA NO MODIFICAR CIUDAD, DEPARTAMENTO Y PAIS");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 430, 600, 17);

        txtnombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtnombre);
        txtnombre.setBounds(10, 90, 245, 30);

        txtdireccion.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtdireccion);
        txtdireccion.setBounds(280, 90, 245, 30);

        txtnumcontacto.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtnumcontacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumcontactoActionPerformed(evt);
            }
        });
        getContentPane().add(txtnumcontacto);
        txtnumcontacto.setBounds(10, 240, 245, 30);

        txtcirut.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtcirut);
        txtcirut.setBounds(280, 190, 245, 30);

        jButton1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton1.setText("GUARDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(550, 140, 120, 30);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setText("SALDO");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(280, 20, 110, 17);

        lblsaldo.setBackground(java.awt.Color.green);
        lblsaldo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblsaldo.setText("0,00");
        lblsaldo.setOpaque(true);
        getContentPane().add(lblsaldo);
        lblsaldo.setBounds(280, 40, 245, 30);

        lblid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblidKeyPressed(evt);
            }
        });
        getContentPane().add(lblid);
        lblid.setBounds(10, 40, 245, 30);

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setText("BUSCAR PRO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(550, 40, 120, 30);

        jButton3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton3.setText("+ ID");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(550, 90, 120, 30);

        txtobservaciones.setColumns(20);
        txtobservaciones.setLineWrap(true);
        txtobservaciones.setRows(5);
        txtobservaciones.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtobservaciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtobservacionesFocusLost(evt);
            }
        });
        txtobservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtobservacionesKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtobservaciones);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 290, 660, 130);

        caract.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        caract.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        caract.setText("0/255");
        getContentPane().add(caract);
        caract.setBounds(140, 270, 130, 17);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("NOMBRE");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 70, 130, 17);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("DIRECCION");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(280, 70, 150, 17);

        txtdepartamento.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtdepartamento);
        txtdepartamento.setBounds(280, 140, 245, 30);

        txtciudad.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtciudad);
        txtciudad.setBounds(10, 140, 245, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("CI RUT");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(280, 170, 110, 17);

        txtpais.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtpais);
        txtpais.setBounds(10, 190, 245, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("OBSERVACIONES");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 270, 190, 17);

        jMenu1.setText("OPCIONES");

        jMenu9.setText("ACTUALIZAR");
        jMenu9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu9MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu9);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 701, 523);
    }// </editor-fold>//GEN-END:initComponents

    private void txtnumcontactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumcontactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumcontactoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        p_control con = p_control.getInstancia();
        d_clave cla = new d_clave();
        try {

            controlarcampos();

            JPasswordField pf = new JPasswordField();
            cla = cla.buscarclave();
            int axp = JOptionPane.showConfirmDialog(null, pf, "INGRESE CLAVE", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (axp == JOptionPane.OK_OPTION) {
                String password = new String(pf.getPassword());
                if (!password.equals(cla.getClave())) {
                    throw new Exception("clave incorrecta");
                }
            } else {
                return;
            }

            pro = new d_propietario();
            pro.setProp_id(Integer.parseInt(lblid.getText()));
            pro.setProp_nombre(txtnombre.getText());
            pro.setProp_direccion(txtdireccion.getText());
            pro.setProp_numcontacto(Integer.parseInt(txtnumcontacto.getText()));
            pro.setProp_cirut(txtcirut.getText());
            pro.setProp_observaciones(txtobservaciones.getText());
            pro.setProp_saldo(con.guardarnumero((lblsaldo.getText())));
            int ax = JOptionPane.showConfirmDialog(null,
                    "¿DESEA GUARDAR LOS DATOS?", "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION);
            if (ax == JOptionPane.YES_OPTION) {
                pro.guardarpropietario(pro);
                guardar_datos_dgi(pro);
                con.escribirfichero("PROP - se ingresa propietario, id prop: " + pro.getProp_id() + " -- nombre: " + pro.getProp_nombre()
                        + " -- direccion: " + pro.getProp_direccion() + " -- tel.: " + pro.getProp_numcontacto()
                        + " -- cirut: " + pro.getProp_cirut() + " -- obs.: " + pro.getProp_observaciones()
                        + " -- saldo: " + con.mostrarnumero(pro.getProp_saldo()));                           
                JOptionPane.showMessageDialog(this, "PROPIETARIO INGRESADO CORRECTAMENTE", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                actualizar();
                pro = null;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        funcbuscar();
    }//GEN-LAST:event_jButton2ActionPerformed

    void funcbuscar() {
        try {
            buscarpropietario();
            cargarpropietario();
            caract.setText(String.valueOf(cant_caract_observaciones()) + "/255");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            reiniciarcampos();
            //if (lblid.getText().equals("")) {
            //throw new Exception("Debe ingresar un id de propietario");
            //}
            obtenerid();
            caract.setText(String.valueOf(cant_caract_observaciones()) + "/255");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void lblidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            funcbuscar();
        }
    }//GEN-LAST:event_lblidKeyPressed

    private void jMenu9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu9MouseClicked
        Float saldo = 0f;
        p_control con = p_control.getInstancia();

        try {
            buscarpropietario();
            saldo = pro.saldototalprop(pro.getProp_id());
            pro.actualizarsaldoprop(pro.getProp_id(), saldo);
            cargarpropietario();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenu9MouseClicked

    private void txtobservacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtobservacionesKeyTyped
        caract.setText(String.valueOf(cant_caract_observaciones()) + "/255");

    }//GEN-LAST:event_txtobservacionesKeyTyped

    private void txtobservacionesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtobservacionesFocusLost
        caract.setText(String.valueOf(cant_caract_observaciones()) + "/255");
    }//GEN-LAST:event_txtobservacionesFocusLost

    void controlarcampos() throws Exception {

        if (txtnombre.getText().equals("")) {
            throw new Exception("Debe ingresar un nombre de propietario");
        }
        if (txtdireccion.getText().equals("")) {
            throw new Exception("Debe ingresar una dirección");
        }
        if (txtnumcontacto.getText().equals("")) {
            throw new Exception("Debe ingresar un número de contacto");
        }
        if (txtcirut.getText().equals("")) {
            throw new Exception("Debe ingresar una ci o rut");
        }
        if (txtobservaciones.getText().equals("")) {
            throw new Exception("Debe ingresar una observación");
        }
    }

    public void obtenerid() {
        d_propietario prop = new d_propietario();
        Integer idobtenido = -1;

        try {
            idobtenido = prop.obtenerid();
            lblid.setText(idobtenido.toString());
            pro = null;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    void buscarpropietario() throws Exception {
        p_control con = p_control.getInstancia();
        d_propietario prop1 = new d_propietario();

        if (lblid.getText().equals("")) {
            throw new Exception("Propietario no existe");
        }

        prop1.setProp_id(Integer.parseInt(lblid.getText()));
        prop1 = prop1.buscarpropietario(prop1.getProp_id());

        if (prop1 != null) {
            con.guardarprimermovimiento(prop1);
            pro = prop1;
        } else {
            throw new Exception("Propietario no existe");
        }
    }

    void cargarpropietario() {
        p_control con = p_control.getInstancia();

        try {
            if (pro != null) {
                pro = pro.buscarpropietario(pro.getProp_id());
                lblid.setText(pro.getProp_id().toString());
                lblid.setEnabled(false);
                txtnombre.setText(pro.getProp_nombre());
                txtdireccion.setText(pro.getProp_direccion());
                txtnumcontacto.setText(pro.getProp_numcontacto().toString());
                txtcirut.setText(pro.getProp_cirut());
                txtobservaciones.setText(pro.getProp_observaciones());
                cargar_datos_dgi(pro);
                lblsaldo.setText(con.mostrarnumero(actualizarsaldopropydevuelve()));
                con.prop = null;
            } else {
                //obtenerid();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    void cargar_datos_dgi(d_propietario prop) throws Exception {
        d_propietario_dgi p = new d_propietario_dgi();

        p = p.buscar(prop.getProp_id());

        if (p == null) {
            throw new Exception("no se pudieron cargar datos de ciudad, departamento y pais");
        }

        txtciudad.setText(p.getCiudad());
        txtdepartamento.setText(p.getDepartamento());
        txtpais.setText(p.getPais());
    }
    
    void guardar_datos_dgi(d_propietario prop) throws Exception {
        p_control con = p_control.getInstancia();
        d_propietario_dgi p = new d_propietario_dgi();
        
        p.setProp_id(prop.getProp_id());
        
        if(txtciudad.getText().equals("")||txtdepartamento.getText().equals("")||txtpais.getText().equals("")){
            throw new Exception("ciudad, departamento y pais no pueden quedar vacíos");
        }
        
        p.setCiudad(txtciudad.getText());
        p.setDepartamento(txtdepartamento.getText());
        p.setPais(txtpais.getText());
        
        p.guardar(p);  
        con.escribirfichero("PROP - se ingresa propietario dgi, id prop: " + prop.getProp_id() + " -- ciudad: " + p.getCiudad()
                        + " -- departamento: " + p.getDepartamento() + " -- pais: " + p.getPais());
    }

    Float actualizarsaldopropydevuelve() {
        Float saldo = 0f;

        try {
            saldo = pro.saldototalprop(pro.getProp_id());
            pro.actualizarsaldoprop(pro.getProp_id(), saldo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return saldo;
    }

    Date fechahoy() {
        java.util.Date fecha = new Date();
        Calendar calendar = Calendar.getInstance();

        calendar.setTime(fecha);

        calendar.add(Calendar.DAY_OF_YEAR, 5);

        return calendar.getTime();
    }

    Date fechainicio() {
        java.util.Date fecha = new Date();
        Calendar calendar = Calendar.getInstance();

        calendar.add(Calendar.YEAR, -100);

        return calendar.getTime();
    }

    void reiniciarcampos() {
        lblid.setEnabled(true);
        txtnombre.setText("");
        txtdireccion.setText("");
        txtnumcontacto.setText("");
        txtcirut.setText("");
        txtobservaciones.setText("");
        lblsaldo.setText("0,00");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p_fichapropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p_fichapropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p_fichapropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p_fichapropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                p_fichapropietario dialog = new p_fichapropietario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel caract;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lblid;
    private javax.swing.JLabel lblsaldo;
    private javax.swing.JTextField txtcirut;
    private javax.swing.JTextField txtciudad;
    private javax.swing.JTextField txtdepartamento;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtnumcontacto;
    private javax.swing.JTextArea txtobservaciones;
    private javax.swing.JTextField txtpais;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar() {
        p_control con = p_control.getInstancia();

        con.actualizar_prop();
    }
}
