/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion.paneles;

import dominio.d_cfe;
import dominio.d_clave;
import dominio.d_configuracion;
import dominio.d_generarcfe;
import dominio.d_movimiento;
import dominio.d_parametro;
import dominio.d_parametroscfe;
import interfaces.observador_prop;
import java.awt.Dimension;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.datacontract.schemas._2004._07.sicfecontract.SICFERespuestaEnvioCFE;
import persistencia.p_conexion;

/**
 *
 * @author Gonzalo
 */
public class p_emitir_factura_dolares extends javax.swing.JDialog implements FocusListener {

    p_control con = p_control.getInstancia();
    Integer accion = 1;

    /**
     * Creates new form p_fichainquilino
     */
    public p_emitir_factura_dolares(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        txtimporte.addFocusListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnactualizar = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtadenda = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txttotal = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtrut = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txtconcepto = new javax.swing.JTextField();
        txtimporte = new javax.swing.JTextField();
        txtiva = new javax.swing.JTextField();
        dgi = new javax.swing.JCheckBox();
        prueba = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        txtpais = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtciudad = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtdepartamento = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtcotizacion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EMITIR FACTURA EN DOLARES");
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("RUT CLIENTE");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 70, 120, 17);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("PAIS CLIENTE");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 270, 260, 17);

        btnactualizar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnactualizar.setText("GENERAR");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnactualizar);
        btnactualizar.setBounds(400, 670, 120, 30);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("NOMBRE CLIENTE");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(10, 20, 140, 17);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("CONCEPTO:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 320, 150, 17);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("ADENDA:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 510, 150, 17);

        txtadenda.setColumns(20);
        txtadenda.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtadenda.setLineWrap(true);
        txtadenda.setRows(5);
        txtadenda.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(txtadenda);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 530, 510, 130);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("IMPORTE (U$S):");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 370, 150, 17);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("+ IVA ($):");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 430, 150, 17);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("TOTAL ($):");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(170, 430, 150, 17);

        txttotal.setEditable(false);
        txttotal.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        getContentPane().add(txttotal);
        txttotal.setBounds(170, 450, 170, 30);

        txtnombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtnombre);
        txtnombre.setBounds(10, 40, 510, 30);

        txtrut.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtrut);
        txtrut.setBounds(10, 90, 510, 30);

        txtdireccion.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtdireccion);
        txtdireccion.setBounds(10, 140, 510, 30);

        txtconcepto.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtconcepto);
        txtconcepto.setBounds(10, 340, 510, 30);

        txtimporte.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtimporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtimporteKeyTyped(evt);
            }
        });
        getContentPane().add(txtimporte);
        txtimporte.setBounds(10, 390, 150, 30);

        txtiva.setEditable(false);
        txtiva.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        getContentPane().add(txtiva);
        txtiva.setBounds(10, 450, 150, 30);

        dgi.setText("DGI (E-FACTURA)");
        dgi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dgiActionPerformed(evt);
            }
        });
        getContentPane().add(dgi);
        dgi.setBounds(10, 670, 140, 23);

        prueba.setText("PRUEBA (E-FACTURA)");
        getContentPane().add(prueba);
        prueba.setBounds(150, 670, 150, 23);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("DIRECCION CLIENTE");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 120, 150, 17);

        txtpais.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtpais.setText("URUGUAY");
        getContentPane().add(txtpais);
        txtpais.setBounds(10, 290, 510, 30);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("CIUDAD CLIENTE");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(10, 170, 150, 17);

        txtciudad.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtciudad);
        txtciudad.setBounds(10, 190, 340, 30);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("DEPARTAMENTO CLIENTE");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(10, 220, 260, 17);

        txtdepartamento.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        getContentPane().add(txtdepartamento);
        txtdepartamento.setBounds(10, 240, 340, 30);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("(Ejemplo: Paysandu)");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(360, 200, 150, 17);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("(Ejemplo: PAYSANDU)");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(360, 250, 160, 17);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("COTIZACION DOLAR:");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(170, 370, 150, 17);

        txtcotizacion.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtcotizacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcotizacionKeyTyped(evt);
            }
        });
        getContentPane().add(txtcotizacion);
        txtcotizacion.setBounds(170, 390, 170, 30);

        setBounds(0, 0, 549, 761);
    }// </editor-fold>//GEN-END:initComponents

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        d_clave cla = new d_clave();
        d_parametroscfe pcfe = new d_parametroscfe();
        String nombre, rut, direccion, ciudad,departamento,pais, concepto, adenda;
        Float importe, iva, cotizacion;
        Date fecha;
        //accion 1 guarda, accion 2 cierra
        try {

            pcfe = pcfe.buscarparametroscfe();
            if (pcfe == null) {
                throw new Exception("debe ingresar parametros cfe: nombre, clave y tenant");
            }
            //CONTROLAR_CAMPOS
            controlar_campos();
            nombre = txtnombre.getText();
            rut = txtrut.getText();
            direccion = txtdireccion.getText();
            ciudad = txtciudad.getText();
            departamento = txtdepartamento.getText();
            pais = txtpais.getText();
            concepto = txtconcepto.getText();
            cotizacion=con.guardarnumero(txtcotizacion.getText());
            adenda = txtadenda.getText();
            importe = con.guardarnumero(txtimporte.getText());
            iva = devuelveiva(importe);
            txtiva.setText(con.mostrarnumero(iva));
            txttotal.setText(con.mostrarnumero(importe + iva));
            fecha = fechaactual();
            if (devuelvetipofactura().equals("dgi")) {
                String mensaje = "NOMBRE: " + nombre + "\n"
                        + "RUT: " + rut + "\n"
                        + "DIRECCION: " + direccion + "\n"
                        + "CIUDAD: " + ciudad + "\n"
                        + "DEPARTAMENTO: " + departamento + "\n"
                        + "PAIS: " + pais + "\n"
                        + "CONCEPTO: " + concepto + "\n"
                        + "TOTAL (IMPORTE + IVA) $: " + con.mostrarnumero(importe + iva) + "\n"
                        + "ADENDA: " + adenda + "\n";
                int ax = JOptionPane.showConfirmDialog(null, devuelvescrollpregunta(mensaje), "¿DESEA ENVIAR A DGI LA FACTURA CON LOS SIGUIENTES DATOS?\n", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
                if (ax == JOptionPane.YES_OPTION) {
                    //controlar_clave(); //ÉSTA FUNCION A LO ULTIMO   
                    envio_dgi(nombre, rut, direccion,ciudad,departamento,pais, concepto,cotizacion, importe, iva, adenda, fecha);
                }
            } else {
                if (devuelvetipofactura().equals("prueba")) {
                    generarefacturaprueba();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnactualizarActionPerformed

    void generarefacturaprueba() throws Exception {
        java.sql.Connection c;
        p_conexion conex = p_conexion.getInstancia();
        c = conex.crearconexion();

        String template = "reporte-factura_1.jasper";
        JasperReport reporte = null;
        reporte = (JasperReport) JRLoader.loadObject(template);

        Map param = new HashMap();
        //120196190011
        param.put("ruc", txtrut.getText());
        param.put("tipo_cfe", "e-Factura");
        param.put("cliente", txtnombre.getText());
        param.put("domicilio_fiscal", txtdireccion.getText());
        param.put("concepto", txtconcepto.getText());
        param.put("localidad", txtciudad.getText());
        Float importe = con.guardarnumero(txtimporte.getText());
        Float total = con.guardarnumero(txttotal.getText());
        Float iva = con.guardarnumero(txtiva.getText());
        param.put("total", con.mostrarnumero(total));
        param.put("subtotal", con.mostrarnumero(importe));
        param.put("adenda", txtadenda.getText());
        param.put("iva", con.mostrarnumero(iva));
        JasperPrint jasperprint = JasperFillManager.fillReport(reporte, param, c);
        JasperExportManager.exportReportToPdfFile(jasperprint, "prueba_doc_" + txtrut.getText() + ".pdf");
        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "prueba_doc_" + txtrut.getText() + ".pdf");
    }

    JScrollPane devuelvescrollpregunta(String mensaje) {
        JTextArea textArea = new JTextArea(mensaje);
        JScrollPane scrollPane = new JScrollPane(textArea);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        textArea.setEditable(false);
        scrollPane.setPreferredSize(new Dimension(500, 250));
        return scrollPane;
    }

    void controlar_campos() throws Exception {
        if (txtnombre.getText().equals("")) {
            throw new Exception("el nombre no puede estar vacío");
        }
        if (txtrut.getText().equals("")) {
            throw new Exception("el rut no puede estar vacío");
        }
        if (txtdireccion.getText().equals("")) {
            throw new Exception("la dirección no puede estar vacía");
        }
        if (txtimporte.getText().equals("") || Float.parseFloat(txtimporte.getText()) <= 0) {
            throw new Exception("el importe no puede estar vacío o ser menor igual a 0");
        }
        if (txtadenda.getText().equals("")) {
            throw new Exception("la adenda no puede estar vacía");
        }
        if (txtcotizacion.getText().equals("")) {
            throw new Exception("la cotización no puede estar vacía");
        }
    }


    private void txtimporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtimporteKeyTyped
        char car = evt.getKeyChar();
        if (!Character.isDigit(car)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtimporteKeyTyped

    private void dgiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dgiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dgiActionPerformed

    private void txtcotizacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcotizacionKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcotizacionKeyTyped

    void controlar_clave() throws Exception {
        d_configuracion conf = new d_configuracion();

        conf = conf.buscarconfiguracion();

        if (conf.getCfe().equals("NO")) {
            return;
        }

        if (conf.getClave().equals("SI")) {
            d_clave cla = new d_clave();
            JPasswordField pf = new JPasswordField();
            cla = cla.buscarclave();

            int ax = JOptionPane.showConfirmDialog(null, pf, "INGRESE CLAVE", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (ax == JOptionPane.OK_OPTION) {
                String password = new String(pf.getPassword());
                if (!password.equals(cla.getClave())) {
                    throw new Exception("clave incorrecta");
                }
            }
        }
    }

    Date fechaactual() throws Exception {
        SimpleDateFormat formateador = new SimpleDateFormat("dd/MM/yyyy", new Locale("es_ES"));
        String fechastr = (formateador.format(new Date()));

        return parsefechadate(fechastr);
    }

    Date parsefechadate(String fecha) throws Exception {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;

        try {
            fechaDate = formato.parse(fecha);
        } catch (ParseException ex) {
            throw new Exception("revise formato de año");
        }
        return fechaDate;
    }

    Float devuelveiva(Float importe) throws Exception { //recibe comision
        d_parametro par = new d_parametro();
        Float iva = 0.0F;

        par = par.buscarparametro();

        iva = importe * par.getIva() / 100;

        return iva;
    }

    void envio_dgi(String nombre, String rut, String direccion,String ciudad,String departamento,String pais, String concepto, Float cotizacion, Float total_recibido, Float iva_recibido, String adenda, Date fecha_recibida) throws Exception {
        //primero chequear que id mov no este en la nueva tabla que guarda cfe

        d_parametroscfe pcfe = new d_parametroscfe();
        SICFERespuestaEnvioCFE envio = new SICFERespuestaEnvioCFE();
        d_generarcfe gt = new d_generarcfe();
        Integer i = -1;

        pcfe = pcfe.buscarparametroscfe();
        if (pcfe == null) {
            throw new Exception("debe ingresar parametros cfe: nombre, clave y tenant");
        }

        gt = gt.ticketdefecto();
        //ver si es necesario cambiar alguna variable de ticket por defecto
        gt.setCfexml(gt.cfexmlfactura_emitida_dolares(nombre, rut, direccion,ciudad,departamento,pais, concepto,cotizacion, total_recibido, iva_recibido, adenda, fecha_recibida));
        //gt.setReferenciaERP("56555");
        gt.setNomusuario(pcfe.getNomusuario());
        gt.setClave(pcfe.getClave());
        gt.setTenant(pcfe.getTenant());

        int id = ((con.maximo_mov() + 1) * 100);

        gt.setReferenciaERP(String.valueOf(id));

        envio = envioCFE(gt.getNomusuario(), gt.getClave(),
                gt.getTenant(), gt.getCliente(), gt.getCfexml(), gt.getReferenciaERP(),
                gt.getReferenciaERP2(), gt.getDevolverQR(), gt.getSizeQR(),
                gt.getImprime(), gt.getRecurso(), gt.getTemplate(), gt.getDevolverXML(),
                gt.getErpPideValidacion(), gt.getVersion());
        //i = envio.getCodigo();
        if (envio.getCodigo() != 0) {
            while (envio.getCodigo() == 100009) {
                id = id + 1;
                gt.setReferenciaERP(String.valueOf(id));
                envio = envioCFE(gt.getNomusuario(), gt.getClave(),
                        gt.getTenant(), gt.getCliente(), gt.getCfexml(), gt.getReferenciaERP(),
                        gt.getReferenciaERP2(), gt.getDevolverQR(), gt.getSizeQR(),
                        gt.getImprime(), gt.getRecurso(), gt.getTemplate(), gt.getDevolverXML(),
                        gt.getErpPideValidacion(), gt.getVersion());
                if (envio.getCodigo() == 0) {
                    id = (con.minimo_entre_cfe_y_mov() - 1); //CHEQUEAR ESTO PORQUE EL MINIMO EN TABLA CFE PUEDE EXISTIR EN MOVIMIENTOS Y VICEVERSA

                    guardarcfe(nombre, id, "A", envio.getIdCFE().getValue().getNumero(),
                            envio.getIdCFE().getValue().getRucemisor().getValue(),
                            envio.getIdCFE().getValue().getTipo(), envio.getIdCFE().getValue().getObservado());
                    //int numserie=envio.getIdCFE().getValue().getNumero();
                    //throw new Exception(envio.getDescripcion().getValue());
                    //JOptionPane.showMessageDialog(null,numserie); 
                    break;
                }
            }
            //if (envio.getCodigo() == 100009) {
            //throw new Exception(envio.getDescripcion().getValue());
            //}
        } else {
            id = (con.minimo_entre_cfe_y_mov() - 1); //CHEQUEAR ESTO PORQUE EL MINIMO EN TABLA CFE PUEDE EXISTIR EN MOVIMIENTOS Y VICEVERSA

            guardarcfe(nombre, id, "A", envio.getIdCFE().getValue().getNumero(),
                    envio.getIdCFE().getValue().getRucemisor().getValue(),
                    envio.getIdCFE().getValue().getTipo(), envio.getIdCFE().getValue().getObservado());
            //int numserie=envio.getIdCFE().getValue().getNumero();
            //throw new Exception(envio.getDescripcion().getValue());
            //JOptionPane.showMessageDialog(null,numserie);  
        }

        JOptionPane.showMessageDialog(this, "CFE GUARDADO CORRECTAMENTE", "AVISO", JOptionPane.INFORMATION_MESSAGE);
    }

    private static SICFERespuestaEnvioCFE envioCFE(java.lang.String nomusuario, java.lang.String clave,
            java.lang.String tenant, java.lang.String cliente, java.lang.String cfexml, java.lang.String referenciaERP,
            java.lang.String referenciaERP2, java.lang.Boolean devolverQR, java.lang.Integer sizeQR,
            java.lang.Integer imprime, java.lang.String recurso, java.lang.String template, java.lang.Boolean devolverXML,
            java.lang.Boolean erpPideValidacion, java.lang.String version) {
        org.tempuri.ImpSICFEEmisor service = new org.tempuri.ImpSICFEEmisor();
        org.tempuri.ISICFEEmisor port = service.getBasicHttpBindingISICFEEmisor();
        return port.envioCFE(nomusuario, clave, tenant, cliente, cfexml, referenciaERP, referenciaERP2,
                devolverQR, sizeQR, imprime, recurso, template, devolverXML, erpPideValidacion, version);
    }

    void guardarcfe(String nombre_cliente, Integer idmov, String serie, Integer numero, String rucemisor, Integer tipo, Integer observado) throws Exception {
        d_cfe cfe = new d_cfe();

        cfe.setIdmov(idmov);
        cfe.setSerie(serie);
        cfe.setNumero(numero);
        cfe.setRucemisor(rucemisor);
        cfe.setTipo(tipo);
        cfe.setObservado(observado);

        cfe.guardarcfe(cfe);
        con.escribirfichero("se emite factura dgi, a nombre de " + nombre_cliente + " movimiento: " + idmov + " -- serie: " + serie + " -- numero: " + numero + " -- ruc emisor: " + rucemisor + " -- tipo: " + tipo + " -- observado: " + observado);
    }

    String devuelvetipofactura() throws Exception {
        if (dgi.isSelected() && prueba.isSelected()) {
            throw new Exception("debe seleccionar dgi o prueba para el documento generado");
        }
        if (dgi.isSelected()) {
            //copia.setSelected(false);
            return "dgi";
        }
        if (prueba.isSelected()) {
            //comun.setSelected(false);
            return "prueba";
        }
        throw new Exception("debe seleccionar dgi o prueba para el documento generado");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p_emitir_factura_dolares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p_emitir_factura_dolares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p_emitir_factura_dolares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p_emitir_factura_dolares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                p_emitir_factura_dolares dialog = new p_emitir_factura_dolares(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JCheckBox dgi;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox prueba;
    private javax.swing.JTextArea txtadenda;
    private javax.swing.JTextField txtciudad;
    private javax.swing.JTextField txtconcepto;
    private javax.swing.JTextField txtcotizacion;
    private javax.swing.JTextField txtdepartamento;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtimporte;
    private javax.swing.JTextField txtiva;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtpais;
    private javax.swing.JTextField txtrut;
    private javax.swing.JTextField txttotal;
    // End of variables declaration//GEN-END:variables

    @Override
    public void focusGained(FocusEvent e) {
        //ENTRA A CAJA DE TEXTO
        if (e.getSource() == txtimporte) {
            //ENTRO A CAJA IMPORTE

        }
    }

    @Override
    public void focusLost(FocusEvent e) {
        //SALE DE CAJA DE TEXTO
        if (e.getSource() == txtimporte) {
            //SALIO DE IMPORTE, LLAMAR FUNCION CALCULAR_IVA
            try {
                if (txtimporte.getText().equals("")) {
                    return;
                }
                Float importe = con.guardarnumero(txtimporte.getText());
                Float iva = devuelveiva(importe);
                txtiva.setText(con.mostrarnumero(iva));
                txttotal.setText(con.mostrarnumero(importe + iva));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

}
