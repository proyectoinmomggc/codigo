/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion.paneles;

import dominio.d_clave;
import dominio.d_configuracion;
import interfaces.observador_prop;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;

/**
 *
 * @author Gonzalo
 */
public class p_configuracion extends javax.swing.JDialog implements observador_prop {

    Integer accion = 1;

    /**
     * Creates new form p_fichainquilino
     */
    public p_configuracion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        cargardatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnactualizar = new javax.swing.JButton();
        cmbimprimir = new javax.swing.JComboBox<>();
        cmbclave = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmbcfe = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CONFIGURACION");
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("¿CONSULTAR IMPRIMIR EN ENTRADA DE INQUILINO?");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 120, 390, 17);

        btnactualizar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnactualizar.setText("ACTUALIZAR");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnactualizar);
        btnactualizar.setBounds(10, 160, 120, 30);

        cmbimprimir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SI", "NO" }));
        getContentPane().add(cmbimprimir);
        cmbimprimir.setBounds(400, 110, 70, 30);

        cmbclave.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SI", "NO" }));
        getContentPane().add(cmbclave);
        cmbclave.setBounds(200, 10, 70, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("¿GENERAR CFE AUTOMATICO?");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 70, 240, 17);

        cmbcfe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SI", "NO" }));
        getContentPane().add(cmbcfe);
        cmbcfe.setBounds(260, 60, 70, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("¿CONSULTAR CLAVE?");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(10, 20, 180, 17);

        setBounds(0, 0, 541, 255);
    }// </editor-fold>//GEN-END:initComponents

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        d_configuracion conf = new d_configuracion();

        try {
            conf.setClave(cmbclave.getSelectedItem().toString());
            conf.setCfe(cmbcfe.getSelectedItem().toString());
            conf.setImprimir(cmbimprimir.getSelectedItem().toString());
            conf.actualizarconfiguracion(conf);
            JOptionPane.showMessageDialog(this, "CONFIGURACION ACTUALIZADA CORRECTAMENTE", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnactualizarActionPerformed

    void control_clave() throws Exception {
        d_clave cla = new d_clave();
        JPasswordField pf = new JPasswordField();
        cla = cla.buscarclave();
        int ax = JOptionPane.showConfirmDialog(null, pf, "INGRESE CLAVE", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (ax == JOptionPane.OK_OPTION) {
            String password = new String(pf.getPassword());
            if (!password.equals(cla.getClave())) {
                throw new Exception("clave incorrecta");
            }
        }
    }

    void cargardatos() {
        d_configuracion conf = new d_configuracion();

        try {
            conf = conf.buscarconfiguracion();
            cmbclave.setSelectedItem(conf.getClave());
            cmbcfe.setSelectedItem(conf.getCfe());
            cmbimprimir.setSelectedItem(conf.getImprimir());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    void controlarclave() throws Exception {
        d_clave cla = new d_clave();

        cla = cla.buscarclave();

        //if (!txtclave.getText().equals(cla.getClave())) {
        throw new Exception("clave incorrecta");
        //}
    }

    void controlarcampos() throws Exception {
        //if (txtnuevaclave.getText().equals("") || txtrepetirclave.getText().equals("")) {
        throw new Exception("no puede quedar un campo vacio");
        //}
        //if (!txtnuevaclave.getText().equals(txtrepetirclave.getText())) {
        //throw new Exception("no coinciden las claves ingresadas");
        //}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p_configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p_configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p_configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p_configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                p_configuracion dialog = new p_configuracion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JComboBox<String> cmbcfe;
    private javax.swing.JComboBox<String> cmbclave;
    private javax.swing.JComboBox<String> cmbimprimir;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar() {
        p_control con = p_control.getInstancia();

        con.actualizar_prop();
    }
}
