/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import dominio.d_inquilino;
import dominio.d_movimiento;
import dominio.d_propietario;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;
import presentacion.paneles.p_control;

/**
 *
 * @author Gonzalo
 */
public class p_mov_inq_correccion extends javax.swing.JDialog {

    DefaultTableModel mdltabmov = new DefaultTableModel();
    p_control c = p_control.getInstancia();
    d_inquilino inq = null;
    d_propietario prop = null;

    /**
     * Creates new form p_gastocta_inq1
     */
    public p_mov_inq_correccion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        tblmovimientos.setModel(mdltabmov);

        mdltabmov.addColumn("FECHA");
        mdltabmov.addColumn("NOMBRE");
        mdltabmov.addColumn("MES");
        mdltabmov.addColumn("AÃ‘O");
        mdltabmov.addColumn("DETALLE");
        mdltabmov.addColumn("ENTRADA");
        mdltabmov.addColumn("SALIDA");
        mdltabmov.addColumn("COMISION");
        mdltabmov.addColumn("IVA");
        mdltabmov.addColumn("IRPF");
        cargarmovimientos();
    }

    void cargarmovimientos() {
        List<d_movimiento> listamovimientos = new ArrayList<d_movimiento>();
        d_movimiento mov = new d_movimiento();
        d_movimiento mov1 = null;
        Vector v;

        try {
            this.inq = c.inq;
            if (this.inq != null) {
                txtpropid.setText(inq.getProp_id().toString());
                txtinqcasa.setText(inq.getInq_casa().toString());
                lblnombreinq.setText(inq.getInq_nombre());

                listamovimientos = mov.listarmovimientosentrefechaseinq(inq.getProp_id(), inq.getInq_casa(), inq.buscarfechaicoriginal(inq.getProp_id(), inq.getInq_casa()), new Date());
                jdcfechaic.setDate(inq.buscarfechaicoriginal(inq.getProp_id(), inq.getInq_casa()));
                jdcarlmrl.setDate(inq.buscarfechaarlmrloriginal(inq.getProp_id(), inq.getInq_casa()));
                for (d_movimiento aux : listamovimientos) {
                    mov1 = new d_movimiento();
                    v = new Vector();
                    mov1.setId(aux.getId());
                    mov1.setProp_id(aux.getProp_id());
                    mov1.setInq_casa(aux.getInq_casa());
                    mov1.setMqp(aux.getMqp());
                    mov1.setAqp(aux.getAqp());
                    mov1.setDetalle(aux.getDetalle());
                    mov1.setEntrada(aux.getEntrada());
                    mov1.setSalida(aux.getSalida());
                    mov1.setComision(aux.getComision());
                    mov1.setIva(aux.getIva());
                    mov1.setTipo(aux.getTipo());
                    mov1.setFecha(aux.getFecha());
                    mov1.setIrpf(aux.getIrpf());
                    //v.add(mov1.getId());
                    v.add(parsefechastring(mov1.getFecha()));
                    v.add(mov1.getTipo());
                    //v.add(mov1.getProp_id());
                    //v.add(mov1.getInq_casa());
                    v.add(mov1.getMqp());
                    v.add(mov1.getAqp());
                    v.add(mov1.getDetalle());
                    v.add(c.mostrarnumero(mov1.getEntrada()));
                    v.add(c.mostrarnumero(mov1.getSalida()));
                    v.add(c.mostrarnumero(mov1.getComision()));
                    v.add(c.mostrarnumero(mov1.getIva()));
                    v.add(c.mostrarnumero(mov1.getIrpf()));

                    //saldo = mov1.getEntrada() - mov1.getSalida() + saldo;
                    //v.add(saldo);
                    mdltabmov.addRow(v);
                }
            }
            c.inq = null;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    String parsefechastring(java.util.Date fecha) {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        String fechastr = formato.format(fecha);

        return fechastr;
    }

    void cleartable() {
        for (int i = 0; i < tblmovimientos.getRowCount(); i++) {
            mdltabmov.removeRow(i);
            i -= 1;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtpropid = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtinqcasa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblnombreinq = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblmovimientos = tblmovimientos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jLabel11 = new javax.swing.JLabel();
        jdcfechaic = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jdcarlmrl = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DETALLE DE MOVIMIENTOS");
        getContentPane().setLayout(null);

        txtpropid.setEditable(false);
        txtpropid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtpropid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpropidActionPerformed(evt);
            }
        });
        txtpropid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpropidKeyPressed(evt);
            }
        });
        getContentPane().add(txtpropid);
        txtpropid.setBounds(10, 40, 138, 30);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("ID INQ");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(170, 20, 250, 17);

        txtinqcasa.setEditable(false);
        txtinqcasa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtinqcasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinqcasaActionPerformed(evt);
            }
        });
        txtinqcasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtinqcasaKeyPressed(evt);
            }
        });
        getContentPane().add(txtinqcasa);
        txtinqcasa.setBounds(170, 40, 138, 30);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("ID PROP");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 270, 17);

        lblnombreinq.setBackground(java.awt.Color.green);
        lblnombreinq.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblnombreinq.setOpaque(true);
        getContentPane().add(lblnombreinq);
        lblnombreinq.setBounds(10, 80, 790, 40);

        tblmovimientos.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tblmovimientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmovimientosMouseClicked(evt);
            }
        });
        tblmovimientos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblmovimientosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblmovimientos);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 130, 1050, 400);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("INICIO CONTRATO");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(330, 20, 180, 17);

        jdcfechaic.setEnabled(false);
        jdcfechaic.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(jdcfechaic);
        jdcfechaic.setBounds(330, 40, 160, 30);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("REAJUSTE");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(500, 20, 210, 17);

        jdcarlmrl.setDateFormatString("MM/yyyy");
        jdcarlmrl.setEnabled(false);
        jdcarlmrl.setFocusable(false);
        jdcarlmrl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(jdcarlmrl);
        jdcarlmrl.setBounds(500, 40, 150, 30);

        setBounds(0, 0, 1090, 587);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpropidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpropidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpropidActionPerformed

    private void txtinqcasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinqcasaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtinqcasaActionPerformed


    private void txtpropidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpropidKeyPressed

    }//GEN-LAST:event_txtpropidKeyPressed

    private void txtinqcasaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtinqcasaKeyPressed

    }//GEN-LAST:event_txtinqcasaKeyPressed

    private void tblmovimientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmovimientosMouseClicked

    }//GEN-LAST:event_tblmovimientosMouseClicked

    private void tblmovimientosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblmovimientosKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblmovimientosKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p_mov_inq_correccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p_mov_inq_correccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p_mov_inq_correccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p_mov_inq_correccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                p_mov_inq_correccion dialog = new p_mov_inq_correccion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcarlmrl;
    private com.toedter.calendar.JDateChooser jdcfechaic;
    private javax.swing.JLabel lblnombreinq;
    private javax.swing.JTable tblmovimientos;
    private javax.swing.JTextField txtinqcasa;
    private javax.swing.JTextField txtpropid;
    // End of variables declaration//GEN-END:variables
}
