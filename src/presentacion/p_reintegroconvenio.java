/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import dominio.d_clave;
import dominio.d_configuracion;
import dominio.d_gastos_inq;
import dominio.d_inquilino;
import dominio.d_propietario;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;
import presentacion.paneles.p_control;
import presentacion.paneles.p_listadosreintegrosconvenios;

/**
 *
 * @author Gonzalo
 */
public class p_reintegroconvenio extends javax.swing.JDialog {

    d_inquilino inq = null;
    d_propietario prop = null;
    int diferenciameses = 0;
    String detalletipo = "";
    Float importemostrar = 0f;

    /**
     * Creates new form p_gastocta_inq1
     */
    public p_reintegroconvenio(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        //cargariva(); obtiene de la tabla parametros
        //this.setMinimumSize(new Dimension(800, 600)); 
        //cmbtipo.setSelectedItem("ALQUILER DIAS");
        generarsaldoalquilerdias();
        cargarmqpaqp();
    }

    void cargarmqpaqp() {
        SimpleDateFormat formateador1 = new SimpleDateFormat("M", new Locale("es_ES"));
        SimpleDateFormat formateador2 = new SimpleDateFormat("yyyy", new Locale("es_ES"));

        txtmqp.setText(formateador1.format(new Date()));
        txtaqp.setText(formateador2.format(new Date()));
        txtmqp1.setText(formateador1.format(new Date()));
        txtaqp1.setText(formateador2.format(new Date()));
    }

    void generarsaldoalquilerdias() {
        p_control con = p_control.getInstancia();
        Float totalsaldodias = 0f;
        Integer cantdiasmesalq = 0;
        Integer difcantdiasmesalq = 0;

        this.inq = con.inq;
        if (this.inq != null) {
            txtpropid.setText(inq.getProp_id().toString());
            txtinqcasa.setText(inq.getInq_casa().toString());
            txtpropid.setEnabled(false);
            txtinqcasa.setEnabled(false);
            lblnombreinq.setText(inq.getInq_nombre());
            cantdiasmesalq = inq.obtenerUltimoDiaMes(devuelveanio(inq.getInq_fechaic()), devuelvemes(inq.getInq_fechaic()));
            difcantdiasmesalq = cantdiasmesalq - devuelvedia(inq.getInq_fechaic());
            totalsaldodias = inq.getInq_impalq() * difcantdiasmesalq / cantdiasmesalq;
            try {
                txtimporte.setText(con.mostrarnumero(totalsaldodias));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            cmbtipo.setSelectedItem("ALQUILER DIAS");
            cmbtipo.setEnabled(false);
            txtmqp.setText(devuelvemes(inq.getInq_fechaic()).toString());
            txtmqp1.setText(devuelveanio(inq.getInq_fechaic()).toString());
            txtmqp.setEnabled(false);
            txtmqp1.setEnabled(false);
        }
    }

    Integer devuelvedia(Date fecha) {
        String formato = "dd";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    Integer devuelvemes(Date fecha) {
        String formato = "MM";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    Integer devuelveanio(Date fecha) {
        String formato = "yyyy";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        txtpropid = new javax.swing.JTextField();
        txtmqp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtmqp1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtimporte = new javax.swing.JTextField();
        txtinqcasa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cmbtipo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtclave = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        txtaqp = new javax.swing.JTextField();
        txtaqp1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblnombreinq = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REINTEGROS - CONVENIOS");
        getContentPane().setLayout(null);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("HASTA");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 280, 60, 17);

        txtpropid.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtpropid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpropidActionPerformed(evt);
            }
        });
        txtpropid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpropidKeyPressed(evt);
            }
        });
        getContentPane().add(txtpropid);
        txtpropid.setBounds(10, 40, 138, 30);

        txtmqp.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtmqp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmqpKeyTyped(evt);
            }
        });
        getContentPane().add(txtmqp);
        txtmqp.setBounds(80, 230, 65, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("IMPORTE");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(250, 210, 130, 17);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("MQP");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(80, 260, 40, 17);

        txtmqp1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtmqp1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmqp1KeyTyped(evt);
            }
        });
        getContentPane().add(txtmqp1);
        txtmqp1.setBounds(80, 280, 65, 30);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("ID INQ");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(10, 70, 140, 17);

        txtimporte.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtimporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtimporteKeyTyped(evt);
            }
        });
        getContentPane().add(txtimporte);
        txtimporte.setBounds(250, 230, 138, 30);

        txtinqcasa.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtinqcasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinqcasaActionPerformed(evt);
            }
        });
        txtinqcasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtinqcasaKeyPressed(evt);
            }
        });
        getContentPane().add(txtinqcasa);
        txtinqcasa.setBounds(10, 90, 138, 30);

        jButton1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(160, 40, 120, 30);

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setText("CONFIRMA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(410, 190, 120, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("TIPO");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(250, 260, 100, 17);

        cmbtipo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmbtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "REINTEGRO", "CONVENIO" }));
        cmbtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbtipoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbtipo);
        cmbtipo.setBounds(250, 280, 138, 30);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("ID PROP");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 150, 17);
        getContentPane().add(txtclave);
        txtclave.setBounds(10, 340, 138, 30);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("CLAVE");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(10, 320, 140, 17);

        txtaqp.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtaqp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaqpKeyTyped(evt);
            }
        });
        getContentPane().add(txtaqp);
        txtaqp.setBounds(150, 230, 65, 30);

        txtaqp1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtaqp1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaqp1KeyTyped(evt);
            }
        });
        getContentPane().add(txtaqp1);
        txtaqp1.setBounds(150, 280, 65, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("AQP");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(150, 210, 60, 17);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("AQP");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(150, 260, 60, 17);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("MQP");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(80, 210, 33, 17);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("DESDE");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(20, 230, 60, 17);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RANGO DE FECHAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 190, 220, 130);

        lblnombreinq.setBackground(java.awt.Color.green);
        lblnombreinq.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblnombreinq.setOpaque(true);
        getContentPane().add(lblnombreinq);
        lblnombreinq.setBounds(10, 140, 520, 40);

        jMenu1.setText("LISTADO");

        jMenu9.setText("CONVENIOS - REINTEGROS");
        jMenu9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu9MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu9);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 555, 459);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpropidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpropidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpropidActionPerformed

    private void txtinqcasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinqcasaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtinqcasaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        funcbuscar();
    }//GEN-LAST:event_jButton1ActionPerformed

    void funcbuscar() {
        p_control con = p_control.getInstancia();
        inq = new d_inquilino();
        d_propietario prop1 = new d_propietario();
        Integer prop_id = 0;
        Integer inq_id = 0;

        lblnombreinq.setText("-");

        try {
            controlar_inq();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    void controlar_inq() throws Exception {
        p_control con = p_control.getInstancia();
        inq = new d_inquilino();
        d_propietario prop1 = new d_propietario();
        Integer prop_id = 0;
        Integer inq_id = 0;

        prop_id = Integer.parseInt(txtpropid.getText());
        inq_id = Integer.parseInt(txtinqcasa.getText());
        inq = inq.buscarinquilino(prop_id, inq_id);
        if (inq == null) {
            limpiarcampos();
            throw new Exception("inquilino no existe");
        }
        prop1 = prop1.buscarpropietario(inq.getProp_id());
        if (prop1 != null) {
            con.guardarprimermovimiento(prop1);
        }
        lblnombreinq.setText(inq.getInq_nombre());
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        List<d_gastos_inq> lista = new ArrayList<>();
        p_control con = p_control.getInstancia();

        try {
            //controlar campos
            controlar_inq();
            diferenciameses = 0;
            detalletipo = "";
            importemostrar = 0f;
            if (txtimporte.getText().equals("")) {
                JOptionPane.showMessageDialog(this, toUpperCase("no hay un monto de importe ingresado"), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            controlarclave();

            lista = generarlistado();
            if (lista.isEmpty()) {
                return;
            }
            int i = 0;
            Boolean guarda;
            int ax = JOptionPane.showConfirmDialog(null,
                    "¿DESEA INGRESAR " + diferenciameses + " " + detalletipo + "/S" + " CON IMPORTE $: "
                    + con.mostrarnumero(importemostrar), "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION);
            if (ax == JOptionPane.YES_OPTION) {
                for (d_gastos_inq aux : lista) {
                    guarda = ingresarconvenioreintegro(aux);
                    if (guarda) {
                        i += 1;
                    }
                }
                if (i > 0) {
                    JOptionPane.showMessageDialog(this, i + " " + (String) cmbtipo.getSelectedItem() + " GUARDADO/S CORRECTAMENTE", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                }
                txtimporte.setText("");
                cargarmqpaqp();
            }
//limpiarcampos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    List<d_gastos_inq> generarlistado() throws Exception {
        p_control con = p_control.getInstancia();
        List<d_gastos_inq> lista = new ArrayList<>();
        d_gastos_inq gas = null;
        String fdesde = "01/" + txtmqp.getText() + "/" + txtaqp.getText();
        String fhasta = "01/" + txtmqp1.getText() + "/" + txtaqp1.getText();

        Date fechadesde = parsefechadate(fdesde);
        Date fechahasta = parsefechadate(fhasta);

        int compara = fechadesde.compareTo(fechahasta);
        if (compara == 1) {
            throw new Exception("REVISE RANGO DE FECHAS, FECHA DESDE DEBE SER MENOR A FECHA HASTA");
        }
        int difmeses = calcularmesesafecha(fechadesde, fechahasta);
        if (difmeses == -1) {
            return null;
        }

        Date fechaactual = fechadesde;
        float importe = con.guardarnumero(txtimporte.getText());
        if (importe == 0f) {
            throw new Exception("EL IMPORTE DEBE SER MAYOR A 0");
        }

        importemostrar = importe;

        String detalle = (String) cmbtipo.getSelectedItem();
        if (detalle.equals("REINTEGRO")) {
            importe = Math.abs(importe) * -1;
        }
        int i = 0;
        while (i <= difmeses) {
            //fechaactual = fechadesde;
            gas = new d_gastos_inq();
            gas.setProp_id(inq.getProp_id());
            gas.setInq_casa(inq.getInq_casa());
            gas.setDetalle(detalle);
            gas.setImporte(importe);
            gas.setAqp(devuelveanio(fechaactual));
            gas.setMqp(devuelvemes(fechaactual));
            gas.setEstado(2);
            lista.add(gas);
            fechaactual = sumar1mes(fechaactual);
            i += 1;
        }

        diferenciameses = i;
        detalletipo = detalle;

        return lista;
    }

    public Date sumar1mes(Date fecha) {
        Calendar calendario = Calendar.getInstance();
        calendario.setTime(fecha);
        calendario.add(Calendar.MONTH, 1);
        return calendario.getTime();
    }

    Integer calcularmesesafecha(Date fechaInicio, Date fechaFin) throws Exception {
        try {
            //Fecha inicio en objeto Calendar
            Calendar startCalendar = Calendar.getInstance();
            startCalendar.setTime(fechaInicio);
            //Fecha finalización en objeto Calendar
            Calendar endCalendar = Calendar.getInstance();
            endCalendar.setTime(fechaFin);
            //Cálculo de meses para las fechas de inicio y finalización
            int startMes = (startCalendar.get(Calendar.YEAR) * 12) + startCalendar.get(Calendar.MONTH);
            int endMes = (endCalendar.get(Calendar.YEAR) * 12) + endCalendar.get(Calendar.MONTH);
            //Diferencia en meses entre las dos fechas
            int diffMonth = endMes - startMes;
            return diffMonth;
        } catch (Exception e) {
            throw new Exception("ERROR AL OBTENER DIFERENCIA DE MESES");
        }
    }

    Date parsefechadate(String fecha) throws Exception {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;

        try {
            fechaDate = formato.parse(fecha);
        } catch (ParseException ex) {
            throw new Exception("revise formato de año");
        }
        return fechaDate;
    }

    Boolean ingresarconvenioreintegro(d_gastos_inq gas) throws Exception {
        p_control con = p_control.getInstancia();
        d_gastos_inq gas1 = new d_gastos_inq();
        gas1 = gas1.buscarconvenioreintegro(gas);
        if (gas1 != null) {
            JOptionPane.showMessageDialog(this, toUpperCase("ya existe un " + gas1.getDetalle() + " para la fecha " + gas.getMqp() + "/" + gas.getAqp() + ""), "ERROR", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        //int ax = JOptionPane.showConfirmDialog(null,
        //"¿DESEA GUARDAR LOS DATOS?", "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION);
        //if (ax == JOptionPane.YES_OPTION) {
        //controlar fecha ingresada con fecha apertura contrato del inq
        int dia = devuelvedia(inq.getInq_fechaic());
        Date fechaingresada = parsefechadate(dia + "/" + gas.getMqp() + "/" + gas.getAqp());
        //chequear el dia que compara contra el dia de inicio de contrato
        int compara = fechaingresada.compareTo(inq.getInq_fechaic());
        if (compara < 0) {
            int ax1 = JOptionPane.showConfirmDialog(null, toUpperCase("el " + gas.getDetalle() + " ingresado " + gas.getMqp() + "/" + gas.getAqp() + " es anterior a la fecha de inicio del contrato, ¿desea continuar?"), "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION);
            if (ax1 == JOptionPane.YES_OPTION) {
                gas.guardargastoinq(gas);
                con.escribirfichero("INQ - se ingresa reint conv a cuenta id prop: " + gas.getProp_id() + " -- id inq: " + gas.getInq_casa() + " -- mqp: " + gas.getMqp() + " -- " + "aqp: " + gas.getAqp() + " -- " + "detalle: " + gas.getDetalle() + " -- " + "importe: " + con.mostrarnumero(gas.getImporte()) + " -- estado: " + (gas.getEstado()));
            } else {
                return false;
            }
        } else {
            gas.guardargastoinq(gas);
            con.escribirfichero("INQ - se ingresa reint conv a cuenta id prop: " + gas.getProp_id() + " -- id inq: " + gas.getInq_casa() + " -- mqp: " + gas.getMqp() + " -- " + "aqp: " + gas.getAqp() + " -- " + "detalle: " + gas.getDetalle() + " -- " + "importe: " + con.mostrarnumero(gas.getImporte()) + " -- estado: " + (gas.getEstado()));
        }
        return true;
    }

    void controlarclave() throws Exception {
        d_clave cla = new d_clave();
        d_configuracion conf = new d_configuracion();

        conf = conf.buscarconfiguracion();

        if (conf.getClave().equals("NO")) {
            return;
        }

        cla = cla.buscarclave();

        if (!txtclave.getText().equals(cla.getClave())) {
            throw new Exception("clave incorrecta");
        }
    }

    private void cmbtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbtipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbtipoActionPerformed

    private void txtpropidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpropidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            funcbuscar();
        }
    }//GEN-LAST:event_txtpropidKeyPressed

    private void txtinqcasaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtinqcasaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            funcbuscar();
        }
    }//GEN-LAST:event_txtinqcasaKeyPressed

    private void jMenu9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu9MouseClicked
        p_listadosreintegrosconvenios lis = new p_listadosreintegrosconvenios(null, true);
        lis.setVisible(true);
    }//GEN-LAST:event_jMenu9MouseClicked

    private void txtmqpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmqpKeyTyped
        char car = evt.getKeyChar();
        if (!Character.isDigit(car)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtmqpKeyTyped

    private void txtaqpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaqpKeyTyped
        char car = evt.getKeyChar();
        if (!Character.isDigit(car)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtaqpKeyTyped

    private void txtmqp1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmqp1KeyTyped
        char car = evt.getKeyChar();
        if (!Character.isDigit(car)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtmqp1KeyTyped

    private void txtaqp1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaqp1KeyTyped
        char car = evt.getKeyChar();
        if (!Character.isDigit(car)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtaqp1KeyTyped

    private void txtimporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtimporteKeyTyped
        char car = evt.getKeyChar();
        if (!Character.isDigit(car)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtimporteKeyTyped

    void limpiarcampos() {
        txtpropid.setText("");
        txtinqcasa.setText("");
        lblnombreinq.setText("-");

        txtimporte.setText("");
        cargarmqpaqp();
        txtclave.setText("");
        lblnombreinq.setText("-");
        inq = null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p_reintegroconvenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p_reintegroconvenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p_reintegroconvenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p_reintegroconvenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                p_reintegroconvenio dialog = new p_reintegroconvenio(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbtipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblnombreinq;
    private javax.swing.JTextField txtaqp;
    private javax.swing.JTextField txtaqp1;
    private javax.swing.JPasswordField txtclave;
    private javax.swing.JTextField txtimporte;
    private javax.swing.JTextField txtinqcasa;
    private javax.swing.JTextField txtmqp;
    private javax.swing.JTextField txtmqp1;
    private javax.swing.JTextField txtpropid;
    // End of variables declaration//GEN-END:variables
}
