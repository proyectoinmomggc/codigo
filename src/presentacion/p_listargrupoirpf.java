/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import dominio.d_grupoirpf;
import dominio.d_movimiento;
import dominio.d_propietario;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.toUpperCase;
import presentacion.paneles.p_control;

/**
 *
 * @author Gonzalo
 */
public class p_listargrupoirpf extends javax.swing.JDialog {

    DefaultTableModel mdltabgru = new DefaultTableModel();
    List<d_grupoirpf> listagrupoirpf = new ArrayList<d_grupoirpf>();
    List<d_grupoirpf> listagrupoirpf_pdf = new ArrayList<d_grupoirpf>();
    Float monto_total = 0f;

    /**
     * Creates new form p_listargrupoirpf1
     */
    public p_listargrupoirpf(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        p_control c = p_control.getInstancia();

        tblgrupoirpf.setModel(mdltabgru);

        mdltabgru.addColumn("PROP ID");
        mdltabgru.addColumn("NOMBRE");
        mdltabgru.addColumn("CI GRUPO");
        mdltabgru.addColumn("MONTO");
        mdltabgru.addColumn("FECHA");

        c.alinear_contenido_columna_izquierda(tblgrupoirpf, 3);
        c.alinear_contenido_columna_izquierda(tblgrupoirpf, 4);
        cargaranioactuall();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbltotal = new javax.swing.JLabel();
        cmbmes = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtanio = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblgrupoirpf = tblgrupoirpf = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbmes1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtanio1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LISTA DE IRPF");
        setModalityType(null);
        getContentPane().setLayout(null);

        lbltotal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbltotal.setText("0");
        getContentPane().add(lbltotal);
        lbltotal.setBounds(90, 360, 360, 17);

        cmbmes.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmbmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cmbmes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbmesKeyPressed(evt);
            }
        });
        getContentPane().add(cmbmes);
        cmbmes.setBounds(10, 70, 138, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("AÑO");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(180, 100, 130, 17);

        txtanio.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtanio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtanioKeyPressed(evt);
            }
        });
        getContentPane().add(txtanio);
        txtanio.setBounds(10, 120, 138, 30);

        tblgrupoirpf.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tblgrupoirpf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblgrupoirpfMouseClicked(evt);
            }
        });
        tblgrupoirpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblgrupoirpfKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblgrupoirpf);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 160, 570, 190);

        jButton3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton3.setText("EXPORTAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(10, 390, 120, 30);

        jButton4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton4.setText("BUSCAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(460, 70, 120, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("MES");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 50, 130, 17);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("TOTAL ($):");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 360, 80, 17);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("MES");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(180, 50, 130, 17);

        cmbmes1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmbmes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cmbmes1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbmes1KeyPressed(evt);
            }
        });
        getContentPane().add(cmbmes1);
        cmbmes1.setBounds(180, 70, 138, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("AÑO");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 100, 130, 17);

        txtanio1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtanio1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtanio1KeyPressed(evt);
            }
        });
        getContentPane().add(txtanio1);
        txtanio1.setBounds(180, 120, 138, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(java.awt.Color.red);
        jLabel8.setText("DESDE");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 20, 60, 17);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(java.awt.Color.red);
        jLabel9.setText("HASTA");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(180, 20, 60, 17);

        setBounds(0, 0, 610, 474);
    }// </editor-fold>//GEN-END:initComponents

    Boolean existeciparafecha(String cigrupo, String fecha, Integer prop_id) throws Exception {
        d_grupoirpf aux = new d_grupoirpf();

        aux = aux.existeciparafecha(cigrupo, fecha, prop_id);
        if (aux != null) {
            return true;
        }

        return false;
    }

    d_grupoirpf grupoirpfdeprop(String cigrupo, Integer prop_id) throws Exception {
        d_grupoirpf aux = new d_grupoirpf();

        return aux.grupoirpfdeprop(cigrupo, prop_id);
    }

    void funcbuscar() {
        String fecha_1 = "";
        String fecha_2 = "";

        try {
            control();
            controlar_rango(cmbmes.getSelectedItem().toString(), txtanio.getText(),
                    cmbmes1.getSelectedItem().toString(), txtanio1.getText());
            String clave = devuelve_clave(cmbmes.getSelectedItem().toString(), txtanio.getText(),
                    cmbmes1.getSelectedItem().toString(), txtanio1.getText());
            //JOptionPane.showMessageDialog(null, toUpperCase(clave), "ERROR", JOptionPane.ERROR_MESSAGE);
            //fecha_1 = cmbmes.getSelectedItem().toString() + txtanio.getText();
            //fecha_2 = cmbmes1.getSelectedItem().toString() + txtanio1.getText();
            listarmontospormes(clave);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    void controlar_rango(String mes_1, String anio_1, String mes_2, String anio_2) throws Exception {
        String fechaaconvertir_1 = "01/" + mes_1 + "/" + anio_1;
        String fechaaconvertir_2 = "01/" + mes_2 + "/" + anio_2;
        Date fechaconvertida_1 = parsefechadate(fechaaconvertir_1);
        Date fechaconvertida_2 = parsefechadate(fechaaconvertir_2);

        int compara = fechaconvertida_1.compareTo(fechaconvertida_2);

        if (compara == 1) {
            throw new Exception("la fecha desde debe ser menor o igual a la fecha hasta");
        }
    }

    String devuelve_clave(String mes_1, String anio_1, String mes_2, String anio_2) throws Exception {
        //String clave = "'" + mes_1 + "" + anio_1 + "'";
        String clave = "";
        String fechaaconvertir_1 = "01/" + mes_1 + "/" + anio_1;
        String fechaaconvertir_2 = "01/" + mes_2 + "/" + anio_2;
        Date fechaconvertida_1 = parsefechadate(fechaaconvertir_1);
        Date fechaconvertida_2 = parsefechadate(fechaaconvertir_2);

        int compara = fechaconvertida_1.compareTo(fechaconvertida_2);

        if (compara == 0) {
            return "'" + mes_1 + "" + anio_1 + "'";
        }
        //int compara = -1;
        Date fecha_listada = (fechaconvertida_1);
        while (compara != 0) {
            if (clave.equals("")) {
                clave = "'" + devuelvemes((fecha_listada)) + ""
                        + devuelveanio(fecha_listada) + "'";
            } else {
                clave = clave + "," + "'" + devuelvemes((fecha_listada)) + ""
                        + devuelveanio(fecha_listada) + "'";
            }

            compara = fecha_listada.compareTo(fechaconvertida_2);
            fecha_listada = sumar1mes(fecha_listada);
        }

        return clave;
    }

    public Date sumar1mes(Date fecha) {
        Calendar calendario = Calendar.getInstance();
        calendario.setTime(fecha);
        calendario.add(Calendar.MONTH, 1);
        return calendario.getTime();
    }

    void cargaranioactuall() {
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);

        txtanio.setText(String.valueOf(year));
        txtanio1.setText(String.valueOf(year));
    }

    private void tblgrupoirpfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblgrupoirpfMouseClicked

    }//GEN-LAST:event_tblgrupoirpfMouseClicked

    private void tblgrupoirpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblgrupoirpfKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblgrupoirpfKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        /*
        try {
            
            java.sql.Connection c;
            p_conexion conex = p_conexion.getInstancia();
            c = conex.crearconexion();
            String fecha = "";

            control();

            String fechaaconvertir_1 = "01/" + cmbmes.getSelectedItem().toString() + "/" + txtanio.getText();
            Date fechaconvertida_1 = parsefechadate(fechaaconvertir_1);
            Integer mes_1 = devuelvemes(fechaconvertida_1);

            String fechaaconvertir_2 = "01/" + cmbmes1.getSelectedItem().toString() + "/" + txtanio1.getText();
            Date fechaconvertida_2 = parsefechadate(fechaaconvertir_2);
            Integer mes_2 = devuelvemes(fechaconvertida_2);

            String mesdetalle_1 = mes(mes_1.toString());
            String mesdetalle_2 = mes(mes_2.toString());

            fecha = cmbmes.getSelectedItem().toString() + txtanio.getText();

            //javax.swing.JOptionPane.showMessageDialog(null, "Conexion establecida");
            String template = "grupoirpf.jasper";
            JasperReport reporte = null;
            reporte = (JasperReport) JRLoader.loadObject(template);

            String fechadetalle = "DESDE " + mesdetalle_1 + " DE " + devuelveanio(fechaconvertida_1) + " HASTA "
                    + mesdetalle_2 + " DE " + devuelveanio(fechaconvertida_2);
            Map param = new HashMap();
            ArrayList lista = new ArrayList();
            lista.add("'12021'");
            String clave = devuelve_clave(cmbmes.getSelectedItem().toString(), txtanio.getText(),
                    cmbmes1.getSelectedItem().toString(), txtanio1.getText());
            param.put("fecha", clave);
            param.put("fechas", clave);
            param.put("mes", mesdetalle_1);
            param.put("fechadetalle", fechadetalle);

            JasperPrint jasperprint = JasperFillManager.fillReport(reporte, param, c);
            //donde dice 'null' va el parametro, si es utilizado
            //this.setVisible(false);
            JasperViewer visor = new JasperViewer(jasperprint, false);
            visor.setTitle("Listado de IRPF por CI");
            visor.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, toUpperCase(e), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
         */
        //cmbmes.getSelectedItem().toString(), txtanio.getText(),
        //cmbmes1.getSelectedItem().toString(), txtanio1.getText()
        crear_pdf("REPORTE DE MONTOS IRPF ENTRE: " + cmbmes.getSelectedItem().toString() + "/"
                + txtanio.getText() + " Y " + cmbmes1.getSelectedItem().toString() + "/" + txtanio1.getText());
    }//GEN-LAST:event_jButton3ActionPerformed

    void crear_pdf(String clave) {
        if (listagrupoirpf_pdf == null) {
            return;
        }
        if (listagrupoirpf_pdf.isEmpty()) {
            return;
        }
        if (monto_total == 0f) {
            return;
        }
        p_control con = p_control.getInstancia();
        Document document = new Document();

        try {
            PdfWriter.getInstance(document, new FileOutputStream("listado_irpf.pdf"));
            document.open();
            Image logo = Image.getInstance("logoreportes.png");
            Paragraph p = new Paragraph(clave);
            p.setAlignment(Element.ALIGN_CENTER);
            p.setSpacingAfter(10f);
            //logo.setAbsolutePosition(150f, 650f);
            logo.scaleAbsolute(500, 85);
            logo.setAlignment(Element.ALIGN_CENTER);
            document.add(logo);
            document.add(p);

            // Este codigo genera una tabla de 3 columnas
            PdfPTable table = new PdfPTable(5);

            // addCell() agrega una celda a la tabla, el cambio de fila
            // ocurre automaticamente al llenar la fila
            PdfPCell cell_prop_id;
            PdfPCell cell_nombre;
            PdfPCell cell_ci;
            PdfPCell cell_monto;
            PdfPCell cell_mes;
            int i = 0;
            for (d_grupoirpf aux : listagrupoirpf_pdf) {
                if (i == 0) {
                    cell_prop_id = new PdfPCell(new Phrase("PROP_ID"));
                    cell_nombre = new PdfPCell(new Phrase("NOMBRE"));
                    cell_ci = new PdfPCell(new Phrase("CI"));
                    cell_monto = new PdfPCell(new Phrase("MONTO"));
                    cell_mes = new PdfPCell(new Phrase("FECHA"));
                    cell_prop_id.setBackgroundColor(new BaseColor(231, 230, 230));
                    cell_nombre.setBackgroundColor(new BaseColor(231, 230, 230));
                    cell_ci.setBackgroundColor(new BaseColor(231, 230, 230));
                    cell_monto.setBackgroundColor(new BaseColor(231, 230, 230));
                    cell_mes.setBackgroundColor(new BaseColor(231, 230, 230));
                    table.addCell(cell_prop_id);
                    table.addCell(cell_nombre);
                    table.addCell(cell_ci);
                    table.addCell(cell_monto);
                    table.addCell(cell_mes);
                }
                cell_prop_id = new PdfPCell(new Phrase(aux.getProp_id().toString()));
                cell_nombre = new PdfPCell(new Phrase(aux.getNombre()));
                cell_ci = new PdfPCell(new Phrase(aux.getCigrupo()));
                cell_monto = new PdfPCell(new Phrase(con.mostrarnumero(aux.getMonto())));
                cell_mes = new PdfPCell(new Phrase((aux.getFecha())));
                table.addCell(cell_prop_id);
                table.addCell(cell_nombre);
                table.addCell(cell_ci);
                table.addCell(cell_monto);
                table.addCell(cell_mes);
                i += 1;
            }

            // Si desea crear una celda de mas de una columna
            // Cree un objecto Cell y cambie su propiedad span
            PdfPCell celdaFinal = new PdfPCell(new Paragraph("TOTAL ($): " + con.mostrarnumero(monto_total)));

            // Indicamos cuantas columnas ocupa la celda
            celdaFinal.setColspan(5);
            celdaFinal.setBackgroundColor(new BaseColor(231, 230, 230));
            celdaFinal.setPaddingBottom(8);

            table.addCell(celdaFinal);

            // Agregamos la tabla al documento            
            document.add(table);

            document.close();
            abrir("listado_irpf.pdf");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, toUpperCase(e), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void abrir(String nombrepdf) throws Exception {
        if (nombrepdf.equals("")) {
            return;
        }
        File path = new File(nombrepdf);
        Desktop.getDesktop().open(path);
    }

    Integer devuelveanio(Date fecha) {
        String formato = "yyyy";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    Integer devuelvemes(Date fecha) {
        String formato = "MM";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        return Integer.parseInt(dateFormat.format(fecha));
    }

    Date parsefechadate(String fecha) throws Exception {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;

        try {
            fechaDate = formato.parse(fecha);
        } catch (ParseException ex) {
            throw new Exception("revise formato de año");
        }
        return fechaDate;
    }

    private void txtanioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtanioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            funcbuscar();
        }
    }//GEN-LAST:event_txtanioKeyPressed

    private void cmbmesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbmesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            funcbuscar();
        }
    }//GEN-LAST:event_cmbmesKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        p_control con = p_control.getInstancia();
        lbltotal.setText("0");
        //funcbuscar();
        List<d_grupoirpf> listaproppormes = new ArrayList<>();
        List<d_grupoirpf> listaciprop = new ArrayList<>();
        d_grupoirpf gru = new d_grupoirpf();
        d_movimiento mov = new d_movimiento();
        String fecha;
        Float montoirpf = 0f;
        //Float prueba_monto = 0f;
        try {
            control();
            //obtener_total();
            fecha = cmbmes.getSelectedItem().toString() + txtanio.getText();
            listaproppormes = gru.listarproppormes(fecha);
            Integer mes = Integer.parseInt(cmbmes.getSelectedItem().toString());
            Integer anio = Integer.parseInt(txtanio.getText());
            if (listaproppormes.size() > 0) {
                for (d_grupoirpf aux : listaproppormes) {
                    montoirpf = mov.obtenertotalirpfpormes(aux.getProp_id(), mes, anio);
                    //prueba_monto+=montoirpf;
                    listaciprop = gru.listarciporproppago(aux.getProp_id());
                    if (listaciprop.size() > 0) {
                        for (d_grupoirpf aux1 : listaciprop) {
                            //gru = new d_grupoirpf();
                            gru = grupoirpfdeprop(aux1.getCigrupo(), aux.getProp_id());
                            if (existeciparafecha(gru.getCigrupo(), fecha, aux.getProp_id())) {//cigrupo,fecha
                                //actualizar
                                gru.setMonto(montoirpf * gru.getPorcentaje() / 100);
                                gru.setFecha(fecha);
                                gru.actualizarmontogrupoirpf(gru);
                            }
                        }
                    }
                }
            }
            //System.out.println(con.mostrarnumero(prueba_monto));
            funcbuscar();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    Float obtener_total() throws ParseException, Exception {
        String fechaaconvertir_1 = "01/" + cmbmes.getSelectedItem() + "/" + txtanio.getText();
        String fechaaconvertir_2 = "01/" + cmbmes1.getSelectedItem() + "/" + txtanio1.getText();

        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

        Calendar calendar_2 = Calendar.getInstance();
        calendar_2.setTime(formato.parse(fechaaconvertir_2));// all done);

        int ultimo_dia_fecha2 = calendar_2.getActualMaximum(calendar_2.DAY_OF_MONTH);

        fechaaconvertir_2 = String.valueOf(ultimo_dia_fecha2) + "/" + cmbmes1.getSelectedItem() + "/" + txtanio1.getText();

        //System.out.println("RANGO: "+fechaaconvertir_1+" - "+fechaaconvertir_2);
        //convertir string a date y usar misma funcion que movimientos diarios para obtener total irpf.
        Date fecha_1, fecha_2;

        fecha_1 = parsefechadate(fechaaconvertir_1);
        fecha_2 = parsefechadate(fechaaconvertir_2);

        d_movimiento m = new d_movimiento();
        m = m.obtenertotalesirpfentrefechas(fecha_1, fecha_2);

        return m.getIrpf();
    }


    private void cmbmes1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbmes1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbmes1KeyPressed

    private void txtanio1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtanio1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtanio1KeyPressed

    String mes(String fecha) {
        String mes = "";

        if (fecha.equals("1")) {
            mes = "ENERO";
            return mes;
        }
        if (fecha.equals("2")) {
            mes = "FEBRERO";
            return mes;
        }
        if (fecha.equals("3")) {
            mes = "MARZO";
            return mes;
        }
        if (fecha.equals("4")) {
            mes = "ABRIL";
            return mes;
        }
        if (fecha.equals("5")) {
            mes = "MAYO";
            return mes;
        }
        if (fecha.equals("6")) {
            mes = "JUNIO";
            return mes;
        }
        if (fecha.equals("7")) {
            mes = "JULIO";
            return mes;
        }
        if (fecha.equals("8")) {
            mes = "AGOSTO";
            return mes;
        }
        if (fecha.equals("9")) {
            mes = "SETIEMBRE";
            return mes;
        }
        if (fecha.equals("10")) {
            mes = "OCTUBRE";
            return mes;
        }
        if (fecha.equals("11")) {
            mes = "NOVIEMBRE";
            return mes;
        }
        if (fecha.equals("12")) {
            mes = "DICIEMBRE";
            return mes;
        }

        return mes;
    }

    void control() throws Exception {
        if (txtanio.getText().equals("")) {
            throw new Exception("Debe ingresar año, formato (yyyy)");
        }
    }

    void cleartable() {
        for (int i = 0; i < tblgrupoirpf.getRowCount(); i++) {
            mdltabgru.removeRow(i);
            i -= 1;
        }
    }

    void listarmontospormes(String fecha) {
        p_control con = p_control.getInstancia();
        d_grupoirpf gru = new d_grupoirpf();
        d_grupoirpf gru1 = null;
        d_propietario p = null;
        float total = 0f;
        Vector v;
        String fecha_columna;

        try {
            cleartable();
            fecha_columna = cmbmes.getSelectedItem().toString() + "/" + txtanio.getText() + " - "
                    + cmbmes1.getSelectedItem().toString() + "/" + txtanio1.getText();
            monto_total = 0f;
            //listagrupoirpf = gru.listarmontospormes(fecha);
            listagrupoirpf_pdf = null;
            listagrupoirpf_pdf = new ArrayList<>();
            listagrupoirpf = gru.listargrupospormes(fecha);
            for (d_grupoirpf aux : listagrupoirpf) {
                gru1 = new d_grupoirpf();
                v = new Vector();
                p = new d_propietario();
                gru1.setProp_id(aux.getProp_id());
                gru1.setNombre(aux.getNombre());
                gru1.setCigrupo(aux.getCigrupo());
                //gru1.setMonto(aux.getMonto());
                gru1.setMonto(aux.getMonto());
                gru1.setFecha(fecha_columna);
                gru1.actualizarmontogrupoirpfporfecha(gru1);
                if (gru1.getMonto() > 0f) {
                    //total += gru1.getMonto();
                    v.add(gru1.getProp_id());
                    v.add(gru1.getNombre());
                    v.add(gru1.getCigrupo());
                    v.add(con.mostrarnumero(gru1.getMonto()));
                    v.add(gru1.getFecha());
                    mdltabgru.addRow(v);
                    listagrupoirpf_pdf.add(gru1);
                }
            }
            if (!listagrupoirpf.isEmpty()) {
                monto_total = obtener_total();
            }
            lbltotal.setText(con.mostrarnumero(monto_total));
            //monto_total = total;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, toUpperCase(ex.getMessage()), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    Integer obtenermes(String fecha) throws Exception {
        if (fecha.length() == 5) {
            return Integer.parseInt(fecha.substring(0, 1));
        }
        if (fecha.length() == 6) {
            return Integer.parseInt(fecha.substring(0, 2));
        }
        throw new Exception("Error formato de fecha");
        //return Integer.parseInt(cmbmes.getSelectedItem().toString());
    }

    Integer obteneranio(String fecha) throws Exception {
        if (fecha.length() == 5) {
            return Integer.parseInt(fecha.substring(1, 5));
        }
        if (fecha.length() == 6) {
            return Integer.parseInt(fecha.substring(2, 6));
        }
        throw new Exception("Error formato de fecha");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(p_listargrupoirpf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(p_listargrupoirpf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(p_listargrupoirpf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(p_listargrupoirpf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                p_listargrupoirpf dialog = new p_listargrupoirpf(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbmes;
    private javax.swing.JComboBox<String> cmbmes1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbltotal;
    private javax.swing.JTable tblgrupoirpf;
    private javax.swing.JTextField txtanio;
    private javax.swing.JTextField txtanio1;
    // End of variables declaration//GEN-END:variables
}
